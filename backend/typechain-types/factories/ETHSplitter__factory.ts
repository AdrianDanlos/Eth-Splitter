/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ETHSplitter, ETHSplitterInterface } from "../ETHSplitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_percentages",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "percentages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipients",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c2538038062000c25833981810160405281019062000037919062000550565b80518251146200007e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000759062000636565b60405180910390fd5b6000805b8251811015620000cf57828181518110620000a257620000a162000658565b5b602002602001015182620000b79190620006b6565b91508080620000c690620006f1565b91505062000082565b506064811462000116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010d906200078e565b60405180910390fd5b82600090805190602001906200012e92919062000151565b50816001908051906020019062000147929190620001e0565b50505050620007b0565b828054828255906000526020600020908101928215620001cd579160200282015b82811115620001cc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000172565b5b509050620001dc919062000232565b5090565b8280548282559060005260206000209081019282156200021f579160200282015b828111156200021e57825182559160200191906001019062000201565b5b5090506200022e919062000232565b5090565b5b808211156200024d57600081600090555060010162000233565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002b5826200026a565b810181811067ffffffffffffffff82111715620002d757620002d66200027b565b5b80604052505050565b6000620002ec62000251565b9050620002fa8282620002aa565b919050565b600067ffffffffffffffff8211156200031d576200031c6200027b565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003608262000333565b9050919050565b620003728162000353565b81146200037e57600080fd5b50565b600081519050620003928162000367565b92915050565b6000620003af620003a984620002ff565b620002e0565b90508083825260208201905060208402830185811115620003d557620003d46200032e565b5b835b81811015620004025780620003ed888262000381565b845260208401935050602081019050620003d7565b5050509392505050565b600082601f83011262000424576200042362000265565b5b81516200043684826020860162000398565b91505092915050565b600067ffffffffffffffff8211156200045d576200045c6200027b565b5b602082029050602081019050919050565b6000819050919050565b62000483816200046e565b81146200048f57600080fd5b50565b600081519050620004a38162000478565b92915050565b6000620004c0620004ba846200043f565b620002e0565b90508083825260208201905060208402830185811115620004e657620004e56200032e565b5b835b81811015620005135780620004fe888262000492565b845260208401935050602081019050620004e8565b5050509392505050565b600082601f83011262000535576200053462000265565b5b815162000547848260208601620004a9565b91505092915050565b600080604083850312156200056a57620005696200025b565b5b600083015167ffffffffffffffff8111156200058b576200058a62000260565b5b62000599858286016200040c565b925050602083015167ffffffffffffffff811115620005bd57620005bc62000260565b5b620005cb858286016200051d565b9150509250929050565b600082825260208201905092915050565b7f4d69736d617463686564206172726179206c656e677468730000000000000000600082015250565b60006200061e601883620005d5565b91506200062b82620005e6565b602082019050919050565b6000602082019050818103600083015262000651816200060f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006c3826200046e565b9150620006d0836200046e565b9250828201905080821115620006eb57620006ea62000687565b5b92915050565b6000620006fe826200046e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000733576200073262000687565b5b600182019050919050565b7f546f74616c2070657263656e74616765206d7573742062652031303000000000600082015250565b600062000776601c83620005d5565b915062000783826200073e565b602082019050919050565b60006020820190508181036000830152620007a98162000767565b9050919050565b61046580620007c06000396000f3fe60806040526004361061002d5760003560e01c8063d1bc76a11461011c578063f88583861461015957610117565b366101175760005b60008054905081101561011557600060646001838154811061005a576100596101f9565b5b9060005260206000200154346100709190610261565b61007a91906102d2565b9050600082815481106100905761008f6101f9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610100573d6000803e3d6000fd5b5050808061010d90610303565b915050610035565b005b600080fd5b34801561012857600080fd5b50610143600480360381019061013e919061037c565b610196565b60405161015091906103ea565b60405180910390f35b34801561016557600080fd5b50610180600480360381019061017b919061037c565b6101d5565b60405161018d9190610414565b60405180910390f35b600081815481106101a657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106101e557600080fd5b906000526020600020016000915090505481565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061026c82610228565b915061027783610228565b925082820261028581610228565b9150828204841483151761029c5761029b610232565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102dd82610228565b91506102e883610228565b9250826102f8576102f76102a3565b5b828204905092915050565b600061030e82610228565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103405761033f610232565b5b600182019050919050565b600080fd5b61035981610228565b811461036457600080fd5b50565b60008135905061037681610350565b92915050565b6000602082840312156103925761039161034b565b5b60006103a084828501610367565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103d4826103a9565b9050919050565b6103e4816103c9565b82525050565b60006020820190506103ff60008301846103db565b92915050565b61040e81610228565b82525050565b60006020820190506104296000830184610405565b9291505056fea264697066735822122034c4b015be7c2325abb76cd0574afa81b502af1705faaecafd45d9d086a23b9664736f6c63430008140033";

type ETHSplitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHSplitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHSplitter__factory extends ContractFactory {
  constructor(...args: ETHSplitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipients: AddressLike[],
    _percentages: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _recipients,
      _percentages,
      overrides || {}
    );
  }
  override deploy(
    _recipients: AddressLike[],
    _percentages: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipients, _percentages, overrides || {}) as Promise<
      ETHSplitter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ETHSplitter__factory {
    return super.connect(runner) as ETHSplitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHSplitterInterface {
    return new Interface(_abi) as ETHSplitterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ETHSplitter {
    return new Contract(address, _abi, runner) as unknown as ETHSplitter;
  }
}
